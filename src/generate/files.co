fs = require \fs

/*
try
  Cards = require \../../data/cards
  Sets = require \../../data/sets
catch
*/
Cards = {}
Sets = {}

rares =
  special: 0
  mythic: 1
  rare: 2
  uncommon: 3
  common: 4

module.exports =
  Cards: Cards
  Sets: Sets

  add: (tla, cards, size) ->
    set =
      common: []
      uncommon: []
      rare: []
      mythic: []
      special: []
      size: size

    for card of cards
      name = card.name = card.name.replace /[Æâàáéíöúû]/g ->
        switch it
        case \Æ => \AE
        case \â \à \á => \a
        case \é => \e
        case \í => \i
        case \ö => \o
        case \ú \û => \u
      name .= toLowerCase!

      url = delete card.url
      card.score = 99

      {rarity} = card
      card.rarity = rares[rarity]

      if Cards[name]
        that.urls[tla] = url
      else
        card.urls = { "#tla": url }
        Cards[name] = card
      set[rarity]push name

    return unless size

    for rarity of <[ mythic special ]>
      unless set[rarity]length
        delete set[rarity]

    Sets[tla] = set

  write: ->
    if not fs.existsSync \data
      fs.mkdirSync \data

    fs.writeFileSync \data/cards.json JSON.stringify Cards, null 2
    fs.writeFileSync \data/sets.json  JSON.stringify Sets,  null 2
