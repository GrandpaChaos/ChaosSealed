{Cards, Sets, mws} = require \../../data
{choose, rand} = require \../_

genRarity = (obj) ->
  # mostly arbitrary numbers
  n = rand 100
  rarity =
    if n > 33
      \common
    else if n > 8
      \uncommon
    else if n > 0
      \rare
    else
      \mythic
  obj[rarity]

genPack = (code) ->
  {size, common, uncommon, rare, mythic, special} = set = Sets[code]
  if mythic and not rand 8
    rare = mythic

  pack = []concat do
    choose size, common
    choose 3 uncommon
    choose 1 rare

  switch code
  case \CNS
    special = genRarity special
  case \DGM
    special = if rand 20 then <>gate else <>shock
  case \ISD
    special = genRarity special
  case \MMA
    special = genRarity set
  case \VMA
    # http://www.wizards.com/magic/magazine/article.aspx?x=mtg/daily/arcana/1491
    if rand 53
      special = genRarity set

  if special
    index = rand special.length
    pack.push special[index]

  mwsCode = mws[code] or code
  for name of pack
    card = {}<<<<Cards[name]
    card.code = mwsCode
    card.url = card.urls[code]
    card

genPacks = (count, sets) ->
  packs = []
  for set of sets
    for i til count
      packs.push genPack set
  packs.reverse!

module.exports = genPacks
